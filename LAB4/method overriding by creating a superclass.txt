import java.util.Scanner;

// Superclass
class Animal {
    // Method to be overridden
    public void makeSound() {
        System.out.println("The animal makes a sound.");
    }
}

// Subclass 1: Dog
class Dog extends Animal {
    @Override
    public void makeSound() {
        System.out.println("The dog barks.");
    }
}

// Subclass 2: Cat
class Cat extends Animal {
    @Override
    public void makeSound() {
        System.out.println("The cat meows.");
    }
}

// Main class
public class MethodOverridingDemo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Choose an animal (1 for Dog, 2 for Cat): ");
        int choice = scanner.nextInt();

        // Polymorphism: Parent class reference pointing to child class objects
        Animal animal;

        switch (choice) {
            case 1:
                animal = new Dog(); // Create Dog object
                break;
            case 2:
                animal = new Cat(); // Create Cat object
                break;
            default:
                System.out.println("Invalid choice. Creating a generic animal.");
                animal = new Animal(); // Create Animal object
        }

        // Call the overridden method
        animal.makeSound();
    }
}
